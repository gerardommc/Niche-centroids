if (!require(raster)) install.packages("raster") ## CHECAR QUE SE CARGUEN BIEN LAS PAQUETERÃAS
if (!require(maptools)) install.packages("maptools")
CropRaster<-function(filelist=NA,ShapeFile=NA)
{
if(is.na(filelist)){
filelist = choose.files(caption="Select ASCII files to crop: ")
}
if(is.na(ShapeFile)){
ShapeFile = file.choose("Select shape file: ")
}
ext1 = readline("Enter Sufix to output file name: ")
Shp1 = readShapePoly(ShapeFile)
for (i in 1:length(filelist))
{
r1 = raster(filelist[i])
cr1 = crop(r1,Shp1)
cr2 = mask(cr1,Shp1)
### For file with extension.
FileName = paste(substr(filelist[i],1,nchar(filelist[i])-4),ext1,substr(filelist[i],nchar(filelist[i])-3,nchar(filelist[i])),sep="")
### For files without extension
writeRaster(cr2,FileName, "ascii")
plot(cr2)
print(i)
}
}
# Corro la funcion (tarda un poco - preferible recortar en ArcMap
# con SDMToolbox) - los rasters cortados se guardan en la misma
#carpeta solo que con el sufijo que se le indique a la funcion
CropRaster(filelist=NA,ShapeFile=NA)
detach("package:maptools", unload = TRUE)
detach("package:raster", unload = TRUE)
detach("package:sp", unload = TRUE)
# Metodo no interactivo
#readClipboard()
asciis = list.files("D:\\lichos_practicas\\ENM\\Curso_MNE_2021\\Practicas\\Datos_Amb\\actual",
full.names=TRUE)
# complio los asciis y le digo a R que son rasters
predictors = stack(asciis)
# complio los asciis y le digo a R que son rasters
predictors = stack(asciis)
#install.packages("raster")
library(raster)
# complio los asciis y le digo a R que son rasters
predictors = stack(asciis)
# Metodo no interactivo
#readClipboard()
asciis = list.files("D:\\lichos_practicas\\ENM\\Curso_MNE_2021\\Practicas\\Datos_Amb\\actual",
full.names=TRUE)
# complio los asciis y le digo a R que son rasters
predictors = stack(asciis)
#install.packages("raster")
library(raster)
library(rgdal)
# complio los asciis y le digo a R que son rasters
predictors = stack(asciis)
library(rgeos)
# complio los asciis y le digo a R que son rasters
predictors = stack(asciis)
library(dismo)
# complio los asciis y le digo a R que son rasters
predictors = stack(asciis)
# Leo mis rasters de todo el mundo
asciis = list.files("D:/lichos_practicas/ENM/Curso_MNE_2020/Ej_Crop_Rasters/Datos_Amb", full.names=TRUE)
# complio los asciis y le digo a R que son rasters
predictors = stack(asciis)
library(sp)
library(rgbif)
occ_count ()
occ_count(basisOfRecord='OBSERVATION')
occ_count(country=isocodes[grep("Mexico", isocodes$name), "code"])
name_suggest(q='Crotalus tzabcan', rank="species")
occ_search(scientificName = "Crotalus tzabcan", limit = 10)
pres_ctza <- occ_data(scientificName = "Crotalus tzabcan")
sapply(pres_ctza, names)
ctza_coords <- as.data.frame(na.omit(pres_ctza$data[ , c("decimalLongitude", "decimalLatitude")]))
head(ctza_coords)
library(maptools)
data(wrld_simpl)
plot(wrld_simpl)
x11()
x11()
plot(wrld_simpl)
x11()
plot(wrld_simpl, col="gray", axes=TRUE)
points(ctza_coords, col = "red", pch=2)
x11()
plot(wrld_simpl, col="gray", axes=TRUE)
points(ctza_coords, col = "blue", pch=20)
pres_ponca <- read.delim("D:/Practicas_Seminario/Datos_Biol/0008073-210819072339941.csv")
readClipboard()
readClipboard()
pres_ponca1 <- read.delim("D:\\Practicas_Seminario\\Datos_Biol\\0008073-210819072339941.csv")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
#install.packages("sp")
#install.packages("raster")
library(sp)
library(raster)
asciis = list.files("D:\\Practicas_Seminario\\Datos_Amb\\actual",
full.names=TRUE)
asciis
asciis = list.files("D:\\Practicas_Seminario\\Datos_Amb\\actual",
full.names=TRUE)
asciis
### REVISAR COMO AGREGAR NOMBRE CUANDO NOS LEE
predictors = stack(asciis)
predictors
### REVISAR COMO AGREGAR NOMBRE CUANDO NOS LEE
predictors = stack(asciis)
predictors
x11()
plot(predictors)
capa4<- raster(predictors, layer=4)
plot(capa4)
ctza_coords <- read.csv("D:\\Practicas_Seminario\\Datos_Biol\\c_tza.csv")
head(ponca_coords)
head(ctza_coords)
library(rgdal)
wwf <- readOGR("D:\\Practicas_Seminario\\Shapes", "wwf_terr_ecos")
data1 <- ctza_coords[c(2,3)]
head(data1)
data_sp <- SpatialPoints(data1)
CRS.new<-CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
proj4string(data_sp)<-CRS.new
plot(capa4)
points(data_sp, col="red")
wwf_subset <- wwf[data_sp, ]
plot(wwf_subset, axes=TRUE, col="grey")
library(maptools)
CropRaster<-function(filelist=NA,ShapeFile=NA)
{
if(is.na(filelist)){
filelist = choose.files(caption="Select ASCII files to crop: ")
}
if(is.na(ShapeFile)){
ShapeFile = file.choose("Select shape file: ")
}
ext1 = readline("Enter Sufix to output file name: ")
Shp1 = readShapePoly(ShapeFile)
for (i in 1:length(filelist))
{
r1 = raster(filelist[i])
cr1 = crop(r1,Shp1)
cr2 = mask(cr1,Shp1)
### For file with extension.
FileName = paste(substr(filelist[i],1,nchar(filelist[i])-4),ext1,substr(filelist[i],nchar(filelist[i])-3,nchar(filelist[i])),sep="")
### For files without extension
writeRaster(cr2,FileName, "ascii")
plot(cr2)
print(i)
}
}
CropRaster(filelist=NA,ShapeFile=NA)
_rhist(capa4)
rhist(capa4)
hist(capa4)
x11()
paris(predictors)
pairs(predictors)
library(corrplot)
plot(capa4)
capa4
cor<- cor(sampleRandom(predictors, size= ncell(capa) * 0.05 ), method = "spearman")
cor<- cor(sampleRandom(predictors, size= ncell(capa4) * 0.05 ), method = "spearman")
corrplot(cor, method = "circle")
corrplot(cor, method = "number")
corrplot(cor, method = "number", addCoefasPercent = T)
library(usdm)
vif(predictors)
v1 <- vifcor(predictors, th=0.9)
v1
objeto <- read.csv(file.choose())
objeto <- read.delim(file.choose())
dat <- objeto
rm(objeto)
head(dat)
colnames(dat)
dat1 <- dat[c(10,22,23)]
head(dat1)
?na.omit
dat2 <- na.omit(data1)
dat2 <- na.omit(dat1)
dat1 <- dat[c(10,22,23,33)]
dat2 <- na.omit(dat1)
head(dat2)
?which
which(dat2$year=2021)
readClipboard()
dat <- read.delim("D:\\Practicas_Seminario\\Datos_Biol\\0008073-210819072339941.csv")
colnames(dat)
dat1 <- dat[c(10,22,23,33)]
head(dat1)
dat1_a <- dat[c(dat$species,dat$decimalLatitude,dat$decimalLongitude,dat$year)]
dat1_a <- dat[c("dat$species","dat$decimalLatitude")]
dat <- read.delim(file.choose())
colnames(dat)
dat1 <- dat[c(10, 22, 23)]
library(raster)
rs <- file.choose()
ras <- raster(rs)
plot(ras)
dat1 <- dat[c(22, 23)]
points(dat1)
head(dat1)
plot(ras)
points(dat1)
data_train <- read.csv(file.choose())
colnames(data_train)
data_train1 <- data_train[c(2,3,4)]
head(data_train1)
data_sp <- subset(data_train1,  Species == "Cal_mel")
head(data_sp)
data_sp1 <- subset(data_train1,  Species == "Cal_mel")
rm(data_sp)
readClipboard()
readClipboard()
data_train <- read.csv("D:\\lichos_datos\\Ecology_Letters\\Data\\filtered_data\\all_sps_environmental_train_data.csv")
colnames(data_train)
data_train1 <- data_train[c(2,3,4)]
head(data_train1)
data_sp1 <- subset(data_train1,  Species == "Cal_mel")
head(data_sp)
head(data_sp1)
readClipboard()
setwd("D:\\lichos_datos\\EcoMod")
getwd
getwd()
write.csv(data_sp1,"cal_mel_train.csv",row.names = F)
data_sp2 <- subset(data_train1,  Species == "Gym_cal")
data_sp2 <- subset(data_train1,  Species == "Cal_cal")
head(data_sp2)
write.csv(data_sp2,"cal_cal_train.csv",row.names = F)
data_test <- read.csv("D:\\lichos_datos\\Ecology_Letters\\Data\\filtered_data\\all_sps_environmental_test_data.csv")
colnames(data_test)
data_test1 <- data_test[c(2,3,4,5)]
head(data_test1)
data_sp1_ab <- subset(data_test1,  Species == "Cal_mel")
head(data_sp1_ab)
write.csv(data_sp1_ab,"cal_mel_test.csv",row.names = F)
readClipboard()
setwd("D:\\lichos_datos\\EcoMod\\Datos")
data_sp2_ab <- subset(data_test1,  Species == "Cal_cal")
head(data_sp2)
head(data_sp2_ab)
write.csv(data_sp2_ab,"cal_cal_test.csv",row.names = F)
